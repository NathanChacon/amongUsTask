{"version":3,"sources":["components/baseHiddenSquare/BaseHiddenSquare.js","components/baseLight/BaseLight.js","components/baseReactorOutput/BaseReactorOutput.js","components/baseButton/BaseButton.js","components/baseReactorInput/BaseReactorInput.js","components/baseVictoryOverlay/BaseVictoryOverlay.js","sounds/button.mp3","sounds/defeat.wav","components/reactorStarter/ReactorStarter.js","App.js","reportWebVitals.js","index.js"],"names":["BaseHiddenSquare","props","useState","activated","setActivated","useEffect","className","BaseLight","BaseReactorOutput","squares","lights","map","light","index","square","BaseButton","disabled","setDisabled","defeat","setDefeat","onClick","event","handleClick","value","BaseReactorInput","buttons","handleInputClick","disableButtons","BaseVictoryOverlay","isVisible","onAction","ReactorStarter","setSquares","setLights","activatedSquares","setActivatedSquares","stepNumber","setStepNumber","isVictoryOverlayVisible","setIsVictoryOverlayVisible","isDefeat","setIsDefeat","isStartDisabled","setIsStartDisabled","isAnimating","setIsAnimating","numberOfVictories","setNumberOfVictories","audio","Audio","buttonAudio","defeatAudio","numberOfClicks","startOutput","setLightOn","getSquaresToActivate","animateSquares","allSquares","activatedSquaresIndexes","interval","setInterval","length","indexToActivate","clearActivatedClass","play","clearInterval","indexToClear","setTimeout","firstStep","randomNumbers","i","randomNumber","getRandomArbitrary","push","min","max","Math","floor","random","handleDefeat","clearValues","handleNextSteps","step","number","lightIndex","forEach","icon","faPowerOff","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee4ee60.chunk.js","sourcesContent":["import './BaseHiddenSquare.css'\r\nimport React, { useEffect, useState } from 'react';\r\nfunction BaseHiddenSquare(props){\r\n    const [activated, setActivated] = useState(props.activated)\r\n    useEffect(() => {\r\n        setActivated(props.activated)\r\n    }, [props.activated])\r\n    return (\r\n        <div className = {activated ? 'square isActivated' : 'square isNormal'}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseHiddenSquare","import './BaseLight.css'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction BaseLight(props){\r\n    const [activated, setActivated] = useState(props.activated)\r\n\r\n    useEffect(() => {\r\n        setActivated(props.activated)\r\n    }, [props.activated])\r\n\r\n    return(\r\n        <div className={activated ? 'circle is-enabled' : 'circle is-disabled'}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseLight","import './BaseReactorOutput.css'\r\nimport BaseHiddenSquare from '../baseHiddenSquare/BaseHiddenSquare.js'\r\nimport BaseLight from '../baseLight/BaseLight.js'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction BaseReactorOutput(props){\r\n    const [squares, setSquares] = useState(props.squares)\r\n    const [lights, setLights] = useState(props.lights)\r\n\r\n    useEffect(() => {\r\n    }, [props.squares])\r\n    return (\r\n        <div className=\"output-container\">\r\n            <div className=\"lights-container\">\r\n                {lights.map((light, index) => {\r\n                    return <BaseLight key={index} activated = {light.activated}></BaseLight>\r\n                })}\r\n            </div>\r\n            <div className=\"output-screen\">\r\n                {squares.map((square, index) => {\r\n                  return <BaseHiddenSquare key={index} activated = {square.activated}></BaseHiddenSquare>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseReactorOutput","import './BaseButton.css'\r\nimport React, { useEffect, useState } from 'react';\r\nfunction BaseButton(props){\r\n    const [disabled, setDisabled] = useState(props.disabled)\r\n    const [defeat, setDefeat] = useState(props.defeat)\r\n    \r\n    useEffect(() => {\r\n        setDisabled(props.disabled)\r\n        setDefeat(props.defeat)\r\n    }, [props.disabled, props.defeat])\r\n\r\n    const handleClick = (event) => {\r\n        props.handleClick(props.value)\r\n    }\r\n\r\n    return (\r\n        <button className={`basic-button ${disabled ? 'basic-btn-disabled' : ''}  ${defeat ? 'basic-btn-defeat' : ''} `} onClick={handleClick}>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BaseButton","import { useState } from 'react'\r\nimport './BaseReactorInput.css'\r\nimport BaseButton from '../baseButton/BaseButton.js'\r\nfunction BaseReactorInput(props){\r\n    const [buttons, setButtons] = useState(props.buttons)\r\n    const handleClick = (value) => {\r\n        props.handleInputClick(value)\r\n    }\r\n    return(\r\n        <div className=\"input-container\">\r\n            <div className=\"input-buttons-container\">\r\n                {buttons.map((index, value) => {\r\n                    return <BaseButton key = {index} value = {value} handleClick ={handleClick} disabled = {props.disableButtons} defeat = {props.defeat}></BaseButton>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseReactorInput","import './BaseVictoryOverlay.css'\r\n\r\nfunction BaseVictoryOverlay(props){\r\n    const onClickPlay = () => {\r\n        props.onAction(true)\r\n    }\r\n    if(props.isVisible){\r\n        return (\r\n            <div className=\"victory-container\">\r\n                <h1>VICTORY!!!</h1>\r\n                <button onClick = {onClickPlay}>Play Again</button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default BaseVictoryOverlay","export default __webpack_public_path__ + \"static/media/button.18d81a66.mp3\";","export default __webpack_public_path__ + \"static/media/defeat.a1164b5f.wav\";","import './ReactorStarter.css'\r\nimport BaseReactorOutput  from '../baseReactorOutput/BaseReactorOutput.js'\r\nimport BaseReactorInput  from '../baseReactorInput/BaseReactorInput.js'\r\nimport BaseVictoryOverlay from '../baseVictoryOverlay/BaseVictoryOverlay.js'\r\nimport buttonAudio from '../../sounds/button.mp3'\r\nimport defeat from '../../sounds/defeat.wav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useState } from 'react'\r\n\r\nfunction ReactorStarter(){\r\n    const [squares, setSquares] = useState([\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        },\r\n        {   \r\n            activated: false\r\n        }\r\n    ]);\r\n\r\n    const [lights, setLights] = useState([\r\n        {\r\n            activated: false\r\n        },\r\n        {\r\n            activated: false\r\n        },\r\n        {\r\n            activated: false\r\n        },\r\n        {\r\n            activated: false\r\n        },\r\n        {\r\n            activated: false\r\n        }\r\n    ])\r\n\r\n    const [buttons, setButtons] = useState([0,1,2,3,4,5,6,7,8])\r\n\r\n    const [activatedSquares, setActivatedSquares] = useState([])\r\n\r\n    const [stepNumber, setStepNumber] = useState(1)\r\n\r\n    const [isVictoryOverlayVisible, setIsVictoryOverlayVisible] = useState(false)\r\n\r\n    const [isDefeat, setIsDefeat] = useState(false)\r\n\r\n    const [isStartDisabled, setIsStartDisabled] = useState(false)\r\n\r\n    const [isAnimating, setIsAnimating] = useState(false)\r\n\r\n    const [numberOfVictories, setNumberOfVictories] = useState(0)\r\n\r\n    const audio = new Audio(buttonAudio);\r\n    const defeatAudio = new Audio(defeat);\r\n\r\n    const totalSteps = 5\r\n    let numberOfClicks = 0\r\n\r\n    const startOutput = () => {\r\n        setIsStartDisabled(true)\r\n        setLightOn(0)\r\n        setActivatedSquares([...getSquaresToActivate(true)])\r\n\r\n        setActivatedSquares(activatedSquares => {\r\n            animateSquares(squares, activatedSquares)\r\n            return activatedSquares\r\n        })\r\n    }\r\n\r\n    const animateSquares = (allSquares, activatedSquaresIndexes) => {\r\n        let index = 0\r\n        setIsAnimating(true)\r\n\r\n        const interval = setInterval(() => {\r\n            if(index <= activatedSquaresIndexes.length - 1){\r\n                const indexToActivate = activatedSquaresIndexes[index]\r\n                allSquares[indexToActivate].activated = true\r\n                setSquares([...allSquares])\r\n                clearActivatedClass(allSquares, indexToActivate)\r\n                audio.play()\r\n                index ++ \r\n            }\r\n            else{\r\n                clearInterval(interval)\r\n                setIsAnimating(false)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    const clearActivatedClass = (allSquares, indexToClear) => {\r\n        setTimeout(() => {\r\n            allSquares[indexToClear].activated = false\r\n            setSquares([...allSquares])\r\n        }, 800)\r\n    }\r\n\r\n    const getSquaresToActivate = (firstStep) => {\r\n        let randomNumbers = []\r\n        if(firstStep){\r\n            for(let i = 2; i > 0; i--){\r\n                const randomNumber = getRandomArbitrary(0, 9)\r\n                randomNumbers.push(randomNumber)\r\n            }\r\n        }\r\n        else {\r\n            randomNumbers = activatedSquares\r\n            const randomNumber = getRandomArbitrary(0, 9)\r\n            randomNumbers.push(randomNumber)\r\n        }\r\n\r\n        return randomNumbers\r\n    }\r\n\r\n   const getRandomArbitrary = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    const handleInputClick = (value) => {\r\n        audio.play()\r\n        if(isStartDisabled){\r\n            if(activatedSquares[numberOfClicks] === value){\r\n                if(numberOfClicks === activatedSquares.length - 1){\r\n                    handleNextSteps()\r\n                }\r\n            }\r\n            else{\r\n                handleDefeat()\r\n            }\r\n    \r\n            numberOfClicks ++\r\n        }\r\n    }\r\n\r\n    const handleDefeat = () => {\r\n        clearValues()\r\n        setNumberOfVictories(0)\r\n        setIsStartDisabled(true)\r\n        setIsDefeat(true)\r\n        defeatAudio.play()\r\n        setTimeout(() => {\r\n            setIsDefeat(false)\r\n            setIsStartDisabled(false)\r\n        }, 1000)\r\n    }\r\n\r\n    const handleVictory = () => {\r\n        clearValues()\r\n        setNumberOfVictories(number => number + 1)\r\n        setIsVictoryOverlayVisible(true)\r\n    }\r\n\r\n    const handleNextSteps = () => {\r\n        if(stepNumber !== totalSteps){\r\n            setStepNumber(stepNumber + 1)\r\n            setActivatedSquares(getSquaresToActivate(false))\r\n            animateSquares(squares, activatedSquares)\r\n            setStepNumber((step) => {\r\n                setLightOn(step - 1)\r\n                return step\r\n            })\r\n        }\r\n        else{\r\n            setStepNumber((step) => {\r\n                setLightOn(step - 1)\r\n                return step\r\n            })\r\n            handleVictory()\r\n        }\r\n    }\r\n\r\n    const onClickVictoryOverlay = (value) => {\r\n        if(value){\r\n            setIsStartDisabled(true)\r\n            startOutput()\r\n        }\r\n        else{\r\n            setIsStartDisabled(false)\r\n        }\r\n\r\n        setIsVictoryOverlayVisible(false)\r\n    }\r\n\r\n    const setLightOn = (lightIndex) => {\r\n        setLights((lights) => {\r\n            lights.forEach((light,index) => {\r\n                if(index === lightIndex){\r\n                    light.activated = true\r\n                }\r\n            })\r\n            return lights\r\n        })\r\n    }\r\n\r\n    const clearValues = () => {\r\n        setActivatedSquares([])\r\n        setStepNumber(1)\r\n        setLights(lights => {\r\n            lights.forEach((light) => {\r\n                light.activated = false\r\n            })\r\n            return lights\r\n        })\r\n\r\n        numberOfClicks = 0\r\n    }\r\n\r\n    return (\r\n        <section className=\"main-container\">\r\n            <span className=\"number-victories\">\r\n                <h1>WINS: {numberOfVictories}</h1>\r\n            </span>\r\n            <button className={isStartDisabled ? 'start-button btn-disabled' : 'start-button'} onClick = {startOutput}>\r\n                <FontAwesomeIcon className=\"power-icon\" icon={faPowerOff} size=\"3x\" />\r\n            </button>\r\n            <div className=\"reactor-panel-container\">\r\n                <BaseReactorOutput squares = {squares} lights = {lights}></BaseReactorOutput>\r\n                <BaseReactorInput buttons = {buttons} handleInputClick = {handleInputClick} disableButtons = {isAnimating} defeat = {isDefeat}></BaseReactorInput>\r\n            </div>\r\n            <BaseVictoryOverlay isVisible = {isVictoryOverlayVisible} onAction = {onClickVictoryOverlay}></BaseVictoryOverlay>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ReactorStarter","import ReactorStarter from './components/reactorStarter/ReactorStarter.js'\n\nfunction App() {\n  return (\n    <section>\n      <ReactorStarter></ReactorStarter>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}